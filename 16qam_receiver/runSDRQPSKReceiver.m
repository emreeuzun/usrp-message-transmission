function [BER,overflow,output] = runSDRQPSKReceiver(prmQPSKReceiver,previewData,printData)
% Runs the 16-QAM SDR receiver using original function names.

persistent qpskRx radio
if isempty(qpskRx)
    % DÜZELTME: QPSKReceiver sınıfı doğru parametrelerle çağrılıyor.
    qpskRx = QPSKReceiver(...
        'ModulationOrder', prmQPSKReceiver.ModulationOrder, ...
        'SampleRate', prmQPSKReceiver.Fs, ...
        'DecimationFactor', prmQPSKReceiver.Decimation, ...
        'FrameSize', prmQPSKReceiver.FrameSize, ...
        'PayloadLength', prmQPSKReceiver.PayloadLength, ...
        'DesiredPower', prmQPSKReceiver.DesiredPower, ...
        'AveragingLength', prmQPSKReceiver.AveragingLength, ...
        'MaxPowerGain', prmQPSKReceiver.MaxPowerGain, ...
        'RolloffFactor', prmQPSKReceiver.RolloffFactor, ...
        'RaisedCosineFilterSpan', prmQPSKReceiver.RaisedCosineFilterSpan, ...
        'InputSamplesPerSymbol', prmQPSKReceiver.Interpolation, ...
        'MaximumFrequencyOffset', prmQPSKReceiver.MaximumFrequencyOffset, ...
        'PostFilterOversampling', prmQPSKReceiver.Interpolation/prmQPSKReceiver.Decimation, ...
        'PhaseRecoveryLoopBandwidth', prmQPSKReceiver.PhaseRecoveryLoopBandwidth, ...
        'PhaseRecoveryDampingFactor', prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'TimingRecoveryDampingFactor', prmQPSKReceiver.TimingRecoveryDampingFactor, ...
        'TimingRecoveryLoopBandwidth', prmQPSKReceiver.TimingRecoveryLoopBandwidth, ...
        'TimingErrorDetectorGain', prmQPSKReceiver.TimingErrorDetectorGain, ...
        'PreambleDetectionThreshold', prmQPSKReceiver.PreambleDetectionThreshold, ...
        'DescramblerBase', prmQPSKReceiver.ScramblerBase, ...
        'DescramblerPolynomial', prmQPSKReceiver.ScramblerPolynomial, ...
        'DescramblerInitialConditions', prmQPSKReceiver.ScramblerInitialConditions,...
        'BerMask', prmQPSKReceiver.BerMask, ...
        'CFCAlgorithm', prmQPSKReceiver.CFCAlgorithm, ...
        'CFCFrequencyResolution', prmQPSKReceiver.MaximumFrequencyOffset, ...
        'Preview', previewData, ...
        'PrintOption', printData, ...
        'ShowConstellation', prmQPSKReceiver.ShowConstellation);
    
    switch prmQPSKReceiver.Platform
        case {'ADALM-PLUTO'}
            radio = sdrrx('Pluto');
            radio.RadioID = prmQPSKReceiver.Address;
            radio.CenterFrequency = prmQPSKReceiver.PlutoCenterFrequency;
            radio.BasebandSampleRate = prmQPSKReceiver.PlutoFrontEndSampleRate;
            radio.SamplesPerFrame = prmQPSKReceiver.PlutoFrameLength;
            radio.GainSource = 'Manual';
            radio.Gain = prmQPSKReceiver.PlutoGain;
            radio.OutputDataType = 'double';
        case {'B200','B210'}
            radio = comm.SDRuReceiver(...
                'Platform', prmQPSKReceiver.Platform, ...
                'SerialNum', prmQPSKReceiver.Address, ...
                'MasterClockRate', prmQPSKReceiver.MasterClockRate, ...
                'CenterFrequency', prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain', prmQPSKReceiver.USRPGain, ...
                'DecimationFactor', prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame', prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType', 'double');
        % Other cases can be added here as in the original file
    end
end

cleanupRx = onCleanup(@()release(qpskRx));
cleanupRadio = onCleanup(@()release(radio));

currentTime = 0;
overflow = 0;
output = [];
BER = zeros(3,1);

while currentTime < prmQPSKReceiver.StopTime
    [rcvdSignal, ~, toverflow] = radio();
    if ~toverflow
        [~, ~, ~, BER, toutput] = qpskRx(rcvdSignal);
        if previewData && ~isempty(toutput)
            output = [output; toutput]; %#ok<AGROW>
        end
    else
        overflow = toverflow + overflow;
    end
    currentTime = currentTime + prmQPSKReceiver.SDRFrameTime;
end

if previewData && ~isempty(output)
    output_char = char(int8(bi2de(reshape(output, 7, [])', 'left-msb')))';
    fprintf('%s', output_char(1:min(end,96)));
    fprintf('...\n...\n');
    disp('<a href="matlab: fprintf(''%s\n'', output_char);">Show all messages</a>');
end
end