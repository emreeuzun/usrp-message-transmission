function underrun = runSDRQPSKTransmitter(prmQPSKTransmitter)
%#codegen

%   Copyright 2012-2023 The MathWorks, Inc.

persistent qpskTx radio
if isempty(qpskTx)
    % Initialize the components
    % Create and configure the transmitter System object
    qpskTx = QPSKTransmitter(...
        'UpsamplingFactor',             prmQPSKTransmitter.Interpolation, ...
        'RolloffFactor',                prmQPSKTransmitter.RolloffFactor, ...
        'RaisedCosineFilterSpan',       prmQPSKTransmitter.RaisedCosineFilterSpan, ...
        'MessageBits',                  prmQPSKTransmitter.MessageBits, ...
        'MessageLength',                prmQPSKTransmitter.MessageLength, ...
        'NumberOfMessage',              prmQPSKTransmitter.NumberOfMessage, ...
        'ScramblerBase',                prmQPSKTransmitter.ScramblerBase, ...
        'ScramblerPolynomial',          prmQPSKTransmitter.ScramblerPolynomial, ...
        'ScramblerInitialConditions',   prmQPSKTransmitter.ScramblerInitialConditions);

    % Create and configure the SDRu System object. Set the SerialNum for B2xx
    % radios and IPAddress for X3xx, N2xx, and USRP2 radios. MasterClockRate
    % is not configurable for N2xx and USRP2 radios.
    switch prmQPSKTransmitter.Platform
        %%% PLUTO Radio %%%
        case {'ADALM-PLUTO'}
               % Create and configure the Pluto System object.
               radio = sdrtx('Pluto');
               radio.RadioID               = prmQPSKTransmitter.Address;
               radio.CenterFrequency       = prmQPSKTransmitter.PlutoCenterFrequency;
               radio.BasebandSampleRate    = prmQPSKTransmitter.PlutoFrontEndSampleRate;
               radio.SamplesPerFrame       = prmQPSKTransmitter.PlutoFrameLength;
               radio.Gain                  = prmQPSKTransmitter.PlutoGain;
            %%% USRP Radios %%%
        case {'B200','B210'}
            radio = comm.SDRuTransmitter(...
                'Platform',             prmQPSKTransmitter.Platform, ...
                'SerialNum',            prmQPSKTransmitter.Address, ...
                'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
                'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
                'Gain',                 prmQPSKTransmitter.USRPGain, ...
                'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
        case {'X300','X310'}
            radio = comm.SDRuTransmitter(...
                'Platform',             prmQPSKTransmitter.Platform, ...
                'IPAddress',            prmQPSKTransmitter.Address, ...
                'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
                'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
                'Gain',                 prmQPSKTransmitter.USRPGain, ...
                'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
        case {'N200/N210/USRP2'}
            radio = comm.SDRuTransmitter(...
                'Platform',             prmQPSKTransmitter.Platform, ...
                'IPAddress',            prmQPSKTransmitter.Address, ...
                'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
                'Gain',                 prmQPSKTransmitter.USRPGain, ...
                'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
        case {'N300','N310'}
            radio = comm.SDRuTransmitter(...
                'Platform',             prmQPSKTransmitter.Platform, ...
                'IPAddress',            prmQPSKTransmitter.Address, ...
                'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
                'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
                'Gain',                 prmQPSKTransmitter.USRPGain, ...
                'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
        case {'N320/N321'}
            radio = comm.SDRuTransmitter(...
                'Platform',             prmQPSKTransmitter.Platform, ...
                'IPAddress',            prmQPSKTransmitter.Address, ...
                'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
                'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
                'Gain',                 prmQPSKTransmitter.USRPGain, ...
                'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
    end
end

cleanupTx = onCleanup(@()release(qpskTx));
cleanupRadio = onCleanup(@()release(radio));

currentTime = 0;
underrun = 0;

%Transmission Process
while currentTime < prmQPSKTransmitter.StopTime
    % Bit generation, modulation and transmission filtering
    data = qpskTx();

    % Data transmission
    tunderrun = radio(data);
    underrun = underrun + tunderrun;

    % Update simulation time
    currentTime=currentTime+prmQPSKTransmitter.SDRFrameTime;
end