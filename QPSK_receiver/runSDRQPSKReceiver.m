function [BER,overflow,output] = runSDRQPSKReceiver(prmQPSKReceiver,previewData,printData)
%

%   Copyright 2012-2023 The MathWorks, Inc.

%#codegen

persistent qpskRx radio
if isempty(qpskRx)
    qpskRx = QPSKReceiver(...
        'ModulationOrder',                      prmQPSKReceiver.ModulationOrder, ...
        'SampleRate',                           prmQPSKReceiver.Fs, ...
        'DecimationFactor',                     prmQPSKReceiver.Decimation, ...
        'FrameSize',                            prmQPSKReceiver.FrameSize, ...
        'HeaderLength',                         prmQPSKReceiver.HeaderLength, ...
        'NumberOfMessage',                      prmQPSKReceiver.NumberOfMessage, ...
        'PayloadLength',                        prmQPSKReceiver.PayloadLength, ...
        'DesiredPower',                         prmQPSKReceiver.DesiredPower, ...
        'AveragingLength',                      prmQPSKReceiver.AveragingLength, ...
        'MaxPowerGain',                         prmQPSKReceiver.MaxPowerGain, ...
        'RolloffFactor',                        prmQPSKReceiver.RolloffFactor, ...
        'RaisedCosineFilterSpan',               prmQPSKReceiver.RaisedCosineFilterSpan, ...
        'InputSamplesPerSymbol',                prmQPSKReceiver.Interpolation, ...
        'MaximumFrequencyOffset',               prmQPSKReceiver.MaximumFrequencyOffset, ...
        'PostFilterOversampling',               prmQPSKReceiver.Interpolation/prmQPSKReceiver.Decimation, ...
        'PhaseRecoveryLoopBandwidth',           prmQPSKReceiver.PhaseRecoveryLoopBandwidth, ...
        'PhaseRecoveryDampingFactor',           prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'TimingRecoveryDampingFactor',          prmQPSKReceiver.TimingRecoveryDampingFactor, ...
        'TimingRecoveryLoopBandwidth',          prmQPSKReceiver.TimingRecoveryLoopBandwidth, ...
        'TimingErrorDetectorGain',              prmQPSKReceiver.TimingErrorDetectorGain, ...
        'PreambleDetectionThreshold',           prmQPSKReceiver.PreambleDetectionThreshold, ...
        'DescramblerBase',                      prmQPSKReceiver.ScramblerBase, ...
        'DescramblerPolynomial',                prmQPSKReceiver.ScramblerPolynomial, ...
        'DescramblerInitialConditions',         prmQPSKReceiver.ScramblerInitialConditions,...
        'BerMask',                              prmQPSKReceiver.BerMask, ...
        'CFCAlgorithm',                         prmQPSKReceiver.CFCAlgorithm, ...
        'Preview',                              previewData, ...
        'PrintOption',                          printData, ...
        'ShowConstellation',                    prmQPSKReceiver.ShowConstellation);

    % Create and configure the SDRu System object. Set the SerialNum for B2xx
    % radios and IPAddress for X3xx, N2xx, N3xx, and USRP2 radios. MasterClockRate
    % is not configurable for N2xx and USRP2 radios.
    switch prmQPSKReceiver.Platform
        %%% PLUTO Radio %%%
        case {'ADALM-PLUTO'}
            radio = sdrrx('Pluto');
            radio.RadioID               = prmQPSKReceiver.Address;
            radio.CenterFrequency       = prmQPSKReceiver.PlutoCenterFrequency;
            radio.BasebandSampleRate    = prmQPSKReceiver.PlutoFrontEndSampleRate;
            radio.SamplesPerFrame       = prmQPSKReceiver.PlutoFrameLength;
            radio.GainSource            = 'Manual';
            radio.Gain                  = prmQPSKReceiver.PlutoGain;
            radio.OutputDataType        = 'double';
        %%% USRP Radios %%%
        case {'B200','B210'}
            radio = comm.SDRuReceiver(...
                'Platform',             prmQPSKReceiver.Platform, ...
                'SerialNum',            prmQPSKReceiver.Address, ...
                'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
                'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain',                 prmQPSKReceiver.USRPGain, ...
                'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType',       'double');
        case {'X300','X310'}
            radio = comm.SDRuReceiver(...
                'Platform',             prmQPSKReceiver.Platform, ...
                'IPAddress',            prmQPSKReceiver.Address, ...
                'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
                'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain',                 prmQPSKReceiver.USRPGain, ...
                'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType',       'double');
        case {'N200/N210/USRP2'}
            radio = comm.SDRuReceiver(...
                'Platform',             prmQPSKReceiver.Platform, ...
                'IPAddress',            prmQPSKReceiver.Address, ...
                'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain',                 prmQPSKReceiver.USRPGain, ...
                'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType',       'double');
        case {'N300','N310'}
            radio = comm.SDRuReceiver(...
                'Platform',             prmQPSKReceiver.Platform, ...
                'IPAddress',            prmQPSKReceiver.Address, ...
                'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
                'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain',                 prmQPSKReceiver.USRPGain, ...
                'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType',       'double');
        case {'N320/N321'}
            radio = comm.SDRuReceiver(...
                'Platform',             prmQPSKReceiver.Platform, ...
                'IPAddress',            prmQPSKReceiver.Address, ...
                'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
                'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
                'Gain',                 prmQPSKReceiver.USRPGain, ...
                'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
                'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
                'OutputDataType',       'double');

    end
end

cleanupRx = onCleanup(@()release(qpskRx));
cleanupRadio = onCleanup(@()release(radio));

% Initialize variables
currentTime = 0;
overflow = 0;
output = [];

while currentTime < prmQPSKReceiver.StopTime

    [rcvdSignal, ~, toverflow] = radio();

    if ~toverflow % Avoid overflow frames for continuous-mode receiver synchronization
        [~, ~, ~, BER, toutput] = qpskRx(rcvdSignal); % Receiver
        if previewData
            output = [output; toutput]; %#ok<AGROW>
        end
    else
        overflow = toverflow + overflow;
    end

    currentTime = currentTime + prmQPSKReceiver.SDRFrameTime;
end

if previewData
    output = int8(bi2de(reshape(output, 7, [])', 'left-msb'));
    output = sprintf('%s', char(output));
    fprintf('%s', output(1:96));
    fprintf('...\n...\n');
    disp('<a href="matlab: fprintf(''%s'', output);">Show all messages</a>');
end